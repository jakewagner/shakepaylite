{"ast":null,"code":"var _jsxFileName = \"/Users/jwagner/Documents/shakepaylite/src/components/Transaction.jsx\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { CURRENCY_NAME } from \"../data/enums\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Icon = styled.img``;\n_c = Icon;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    quotes: state.quotes\n  };\n};\n\nconst WalletOverview = props => {\n  const {\n    type,\n    quotes,\n    quotePair,\n    balance,\n    iconSource\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: CURRENCY_NAME[type]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Icon, {\n      src: iconSource\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), quotes[quotePair], \"and\", balance, \"and\", quotePair ? balance * parseFloat(quotes[quotePair]) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = WalletOverview;\nexport default connect(mapStateToProps)(Transaction);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Icon\");\n$RefreshReg$(_c2, \"WalletOverview\");","map":{"version":3,"sources":["/Users/jwagner/Documents/shakepaylite/src/components/Transaction.jsx"],"names":["connect","styled","CURRENCY_NAME","Icon","img","mapStateToProps","state","ownProps","quotes","WalletOverview","props","type","quotePair","balance","iconSource","parseFloat","Transaction"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,aAAT,QAA8B,eAA9B;;AAEA,MAAMC,IAAI,GAAGF,MAAM,CAACG,GAAI,EAAxB;KAAMD,I;;AAEN,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEC,IAAAA,MAAM,EAAEF,KAAK,CAACE;AAAhB,GAAP;AACD,CAFD;;AAIA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA,IAAF;AAAQH,IAAAA,MAAR;AAAgBI,IAAAA,SAAhB;AAA2BC,IAAAA,OAA3B;AAAoCC,IAAAA;AAApC,MAAmDJ,KAAzD;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAKR,aAAa,CAACS,IAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,GAAG,EAAEG;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGN,MAAM,CAACI,SAAD,CAHT,SAKGC,OALH,SAOGD,SAAS,GAAGC,OAAO,GAAGE,UAAU,CAACP,MAAM,CAACI,SAAD,CAAP,CAAvB,GAA6C,IAPzD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAdD;;MAAMH,c;AAgBN,eAAeT,OAAO,CAACK,eAAD,CAAP,CAAyBW,WAAzB,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { CURRENCY_NAME } from \"../data/enums\";\n\nconst Icon = styled.img``;\n\nconst mapStateToProps = (state, ownProps) => {\n  return { quotes: state.quotes };\n};\n\nconst WalletOverview = (props) => {\n  const { type, quotes, quotePair, balance, iconSource } = props;\n\n  return (\n    <div>\n      <h3>{CURRENCY_NAME[type]}</h3>\n      <Icon src={iconSource} />\n      {quotes[quotePair]}\n      and\n      {balance}\n      and\n      {quotePair ? balance * parseFloat(quotes[quotePair]) : null}\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(Transaction);\n"]},"metadata":{},"sourceType":"module"}