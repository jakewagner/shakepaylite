{"ast":null,"code":"var _jsxFileName = \"/Users/jwagner/Documents/shakepaylite/src/scenes/Wallets.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport styled from \"styled-components\";\nimport { updateQuotes, setActivePage, setActiveCurrency } from \"../data/actions\";\nimport { fetchQuotes } from \"../data/apiMediator\";\nimport { ListItem, WalletOverview } from \"../components\";\nimport logo from \"../assets/logo.svg\";\nimport btcSymbol from \"../assets/symbolbtc.svg\";\nimport ethSymbol from \"../assets/symboleth.svg\";\nimport cadSymbol from \"../assets/symbolcad.svg\";\nimport { CURRENCY_TYPES, QUOTE_PAIRS, PAGES } from \"../data/enums\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Balance = styled.h2`\n  list-style-type: none;\n`;\n_c = Balance;\nconst Logo = styled.img`\n  list-style-type: none;\n`;\n_c2 = Logo;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    quotes: state.quotes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    updateQuotes,\n    setActivePage,\n    setActiveCurrency\n  }, dispatch);\n};\n\nconst Wallets = props => {\n  _s();\n\n  const {\n    updateQuotes,\n    setActiveCurrency,\n    quotes\n  } = props;\n  useEffect(() => {\n    const getQuotes = setInterval(async () => {\n      const quotes = await fetchQuotes();\n      updateQuotes(quotes);\n    }, 3000);\n    return () => clearInterval(getQuotes);\n  }, []);\n\n  const handleWalletSelection = currency => {\n    setActivePage(PAGES.TRANSACTIONS);\n    setActiveCurrency(CURRENCY_TYPES[currency]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      src: logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Balance, {\n      children: \"$8,844.42\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        onClick: () => handleWalletSelection(CURRENCY_TYPES.CAD),\n        children: /*#__PURE__*/_jsxDEV(WalletOverview, {\n          type: CURRENCY_TYPES.CAD,\n          balance: 1856.34,\n          iconSource: cadSymbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        onClick: () => handleWalletSelection(CURRENCY_TYPES.BTC),\n        children: /*#__PURE__*/_jsxDEV(WalletOverview, {\n          type: CURRENCY_TYPES.BTC,\n          balance: 0.4946,\n          quotePair: QUOTE_PAIRS.BTCCAD,\n          iconSource: btcSymbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        onClick: () => handleWalletSelection(CURRENCY_TYPES.ETH),\n        children: /*#__PURE__*/_jsxDEV(WalletOverview, {\n          type: CURRENCY_TYPES.ETH,\n          quotePair: QUOTE_PAIRS.ETHCAD,\n          balance: 2.9429,\n          iconSource: ethSymbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Wallets, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = Wallets;\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallets);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Balance\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"Wallets\");","map":{"version":3,"sources":["/Users/jwagner/Documents/shakepaylite/src/scenes/Wallets.jsx"],"names":["useEffect","connect","bindActionCreators","styled","updateQuotes","setActivePage","setActiveCurrency","fetchQuotes","ListItem","WalletOverview","CURRENCY_TYPES","QUOTE_PAIRS","PAGES","Balance","h2","Logo","img","mapStateToProps","state","ownProps","quotes","mapDispatchToProps","dispatch","Wallets","props","getQuotes","setInterval","clearInterval","handleWalletSelection","currency","TRANSACTIONS","logo","CAD","cadSymbol","BTC","BTCCAD","btcSymbol","ETH","ETHCAD","ethSymbol"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SACEC,YADF,EAEEC,aAFF,EAGEC,iBAHF,QAIO,iBAJP;AAKA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,eAAzC;;;;;AAOA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,KAAtC,QAAmD,eAAnD;;AAEA,MAAMC,OAAO,GAAGV,MAAM,CAACW,EAAG;AAC1B;AACA,CAFA;KAAMD,O;AAIN,MAAME,IAAI,GAAGZ,MAAM,CAACa,GAAI;AACxB;AACA,CAFA;MAAMD,I;;AAIN,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEC,IAAAA,MAAM,EAAEF,KAAK,CAACE;AAAhB,GAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAOpB,kBAAkB,CACvB;AAAEE,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,GADuB,EAEvBgB,QAFuB,CAAzB;AAID,CALD;;AAOA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEpB,IAAAA,YAAF;AAAgBE,IAAAA,iBAAhB;AAAmCc,IAAAA;AAAnC,MAA8CI,KAApD;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,SAAS,GAAGC,WAAW,CAAC,YAAY;AACxC,YAAMN,MAAM,GAAG,MAAMb,WAAW,EAAhC;AACAH,MAAAA,YAAY,CAACgB,MAAD,CAAZ;AACD,KAH4B,EAG1B,IAH0B,CAA7B;AAIA,WAAO,MAAMO,aAAa,CAACF,SAAD,CAA1B;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,qBAAqB,GAAIC,QAAD,IAAc;AAC1CxB,IAAAA,aAAa,CAACO,KAAK,CAACkB,YAAP,CAAb;AACAxB,IAAAA,iBAAiB,CAACI,cAAc,CAACmB,QAAD,CAAf,CAAjB;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,GAAG,EAAEE;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA,gBAAU;AAAV;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAE,MAAMH,qBAAqB,CAAClB,cAAc,CAACsB,GAAhB,CAA9C;AAAA,+BACE,QAAC,cAAD;AACE,UAAA,IAAI,EAAEtB,cAAc,CAACsB,GADvB;AAEE,UAAA,OAAO,EAAE,OAFX;AAGE,UAAA,UAAU,EAAEC;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAE,MAAML,qBAAqB,CAAClB,cAAc,CAACwB,GAAhB,CAA9C;AAAA,+BACE,QAAC,cAAD;AACE,UAAA,IAAI,EAAExB,cAAc,CAACwB,GADvB;AAEE,UAAA,OAAO,EAAE,MAFX;AAGE,UAAA,SAAS,EAAEvB,WAAW,CAACwB,MAHzB;AAIE,UAAA,UAAU,EAAEC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAgBE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAE,MAAMR,qBAAqB,CAAClB,cAAc,CAAC2B,GAAhB,CAA9C;AAAA,+BACE,QAAC,cAAD;AACE,UAAA,IAAI,EAAE3B,cAAc,CAAC2B,GADvB;AAEE,UAAA,SAAS,EAAE1B,WAAW,CAAC2B,MAFzB;AAGE,UAAA,OAAO,EAAE,MAHX;AAIE,UAAA,UAAU,EAAEC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA/CD;;GAAMhB,O;;MAAAA,O;AAiDN,eAAetB,OAAO,CAACgB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CE,OAA7C,CAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport styled from \"styled-components\";\n\nimport {\n  updateQuotes,\n  setActivePage,\n  setActiveCurrency,\n} from \"../data/actions\";\nimport { fetchQuotes } from \"../data/apiMediator\";\n\nimport { ListItem, WalletOverview } from \"../components\";\n\nimport logo from \"../assets/logo.svg\";\nimport btcSymbol from \"../assets/symbolbtc.svg\";\nimport ethSymbol from \"../assets/symboleth.svg\";\nimport cadSymbol from \"../assets/symbolcad.svg\";\n\nimport { CURRENCY_TYPES, QUOTE_PAIRS, PAGES } from \"../data/enums\";\n\nconst Balance = styled.h2`\n  list-style-type: none;\n`;\n\nconst Logo = styled.img`\n  list-style-type: none;\n`;\n\nconst mapStateToProps = (state, ownProps) => {\n  return { quotes: state.quotes };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    { updateQuotes, setActivePage, setActiveCurrency },\n    dispatch\n  );\n};\n\nconst Wallets = (props) => {\n  const { updateQuotes, setActiveCurrency, quotes } = props;\n\n  useEffect(() => {\n    const getQuotes = setInterval(async () => {\n      const quotes = await fetchQuotes();\n      updateQuotes(quotes);\n    }, 3000);\n    return () => clearInterval(getQuotes);\n  }, []);\n\n  const handleWalletSelection = (currency) => {\n    setActivePage(PAGES.TRANSACTIONS);\n    setActiveCurrency(CURRENCY_TYPES[currency]);\n  };\n\n  return (\n    <div>\n      <Logo src={logo} />\n      <Balance>{\"$8,844.42\"}</Balance>\n      <ul>\n        <ListItem onClick={() => handleWalletSelection(CURRENCY_TYPES.CAD)}>\n          <WalletOverview\n            type={CURRENCY_TYPES.CAD}\n            balance={1856.34}\n            iconSource={cadSymbol}\n          />\n        </ListItem>\n        <ListItem onClick={() => handleWalletSelection(CURRENCY_TYPES.BTC)}>\n          <WalletOverview\n            type={CURRENCY_TYPES.BTC}\n            balance={0.4946}\n            quotePair={QUOTE_PAIRS.BTCCAD}\n            iconSource={btcSymbol}\n          />\n        </ListItem>\n        <ListItem onClick={() => handleWalletSelection(CURRENCY_TYPES.ETH)}>\n          <WalletOverview\n            type={CURRENCY_TYPES.ETH}\n            quotePair={QUOTE_PAIRS.ETHCAD}\n            balance={2.9429}\n            iconSource={ethSymbol}\n          />\n        </ListItem>\n      </ul>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallets);\n"]},"metadata":{},"sourceType":"module"}