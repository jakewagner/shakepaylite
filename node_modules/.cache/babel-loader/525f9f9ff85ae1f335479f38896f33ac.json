{"ast":null,"code":"var _jsxFileName = \"/Users/jwagner/Documents/shakepaylite/src/components/WalletOverview.jsx\";\nimport { connect } from \"react-redux\";\nimport { CURRENCY_NAME } from \"../data/enums\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    quotes: state.quotes\n  };\n};\n\nconst WalletOverview = props => {\n  const {\n    type,\n    quotes,\n    quotePair,\n    balance\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: CURRENCY_NAME[type]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), quotes[quotePair], balance, \"and\", quotePair ? balance * parseFloat(quotes[quotePair]) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = WalletOverview;\nexport default connect(mapStateToProps)(WalletOverview);\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletOverview\");","map":{"version":3,"sources":["/Users/jwagner/Documents/shakepaylite/src/components/WalletOverview.jsx"],"names":["connect","CURRENCY_NAME","mapStateToProps","state","ownProps","quotes","WalletOverview","props","type","quotePair","balance","parseFloat"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,SAASC,aAAT,QAA8B,eAA9B;;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEC,IAAAA,MAAM,EAAEF,KAAK,CAACE;AAAhB,GAAP;AACD,CAFD;;AAIA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA,IAAF;AAAQH,IAAAA,MAAR;AAAgBI,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,MAAuCH,KAA7C;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAKN,aAAa,CAACO,IAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,MAAM,CAACI,SAAD,CAFT,EAGGC,OAHH,SAKGD,SAAS,GAAGC,OAAO,GAAGC,UAAU,CAACN,MAAM,CAACI,SAAD,CAAP,CAAvB,GAA6C,IALzD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAZD;;KAAMH,c;AAcN,eAAeN,OAAO,CAACE,eAAD,CAAP,CAAyBI,cAAzB,CAAf","sourcesContent":["import { connect } from \"react-redux\";\n\nimport { CURRENCY_NAME } from \"../data/enums\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return { quotes: state.quotes };\n};\n\nconst WalletOverview = (props) => {\n  const { type, quotes, quotePair, balance } = props;\n\n  return (\n    <div>\n      <h2>{CURRENCY_NAME[type]}</h2>\n      {quotes[quotePair]}\n      {balance}\n      and\n      {quotePair ? balance * parseFloat(quotes[quotePair]) : null}\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps)(WalletOverview);\n"]},"metadata":{},"sourceType":"module"}