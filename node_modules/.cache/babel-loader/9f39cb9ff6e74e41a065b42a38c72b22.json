{"ast":null,"code":"var _jsxFileName = \"/Users/jwagner/Documents/shakepaylite/src/scenes/Wallets.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { updateQuotes } from \"../data/actions\";\nimport { fetchQuotes } from \"../data/apiMediator\";\nimport { ListItem, WalletOverview } from \"../components\";\nimport { CURRENCY_TYPES, QUOTE_PAIRS } from \"../data/enums\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    quotes: state.quotes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    updateQuotes\n  }, dispatch);\n};\n\nconst Wallets = props => {\n  _s();\n\n  const {\n    updateQuotes,\n    quotes\n  } = props;\n  useEffect(() => {\n    const getQuotes = setInterval(async () => {\n      const quotes = await fetchQuotes();\n      updateQuotes(quotes);\n    }, 1000);\n    return () => clearInterval(getQuotes);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Balance, {\n      children: ($8, 844.42)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(WalletOverview, {\n          type: CURRENCY_TYPES.CAD,\n          balance: 1856.34,\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(WalletOverview, {\n          type: CURRENCY_TYPES.BTC,\n          balance: 0.4946,\n          quotePair: QUOTE_PAIRS.BTCCAD,\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(WalletOverview, {\n          type: CURRENCY_TYPES.ETH,\n          quotePair: QUOTE_PAIRS.ETHCAD,\n          balance: 2.9429,\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Wallets, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Wallets;\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallets);\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallets\");","map":{"version":3,"sources":["/Users/jwagner/Documents/shakepaylite/src/scenes/Wallets.jsx"],"names":["useEffect","connect","bindActionCreators","updateQuotes","fetchQuotes","ListItem","WalletOverview","CURRENCY_TYPES","QUOTE_PAIRS","mapStateToProps","state","ownProps","quotes","mapDispatchToProps","dispatch","Wallets","props","getQuotes","setInterval","clearInterval","$8","CAD","BTC","BTCCAD","ETH","ETHCAD"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,eAAzC;AAEA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,eAA5C;;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEC,IAAAA,MAAM,EAAEF,KAAK,CAACE;AAAhB,GAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAOZ,kBAAkB,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAmBW,QAAnB,CAAzB;AACD,CAFD;;AAIA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEb,IAAAA,YAAF;AAAgBS,IAAAA;AAAhB,MAA2BI,KAAjC;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,SAAS,GAAGC,WAAW,CAAC,YAAY;AACxC,YAAMN,MAAM,GAAG,MAAMR,WAAW,EAAhC;AACAD,MAAAA,YAAY,CAACS,MAAD,CAAZ;AACD,KAH4B,EAG1B,IAH0B,CAA7B;AAIA,WAAO,MAAMO,aAAa,CAACF,SAAD,CAA1B;AACD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAA,iBAAWG,EAAE,EAAE,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE,QAAC,QAAD;AAAA,+BACE,QAAC,cAAD;AACE,UAAA,IAAI,EAAEb,cAAc,CAACc,GADvB;AAEE,UAAA,OAAO,EAAE,OAFX;AAGE,UAAA,OAAO,EAAE,MAAM,CAAE;AAHnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,QAAD;AAAA,+BACE,QAAC,cAAD;AACE,UAAA,IAAI,EAAEd,cAAc,CAACe,GADvB;AAEE,UAAA,OAAO,EAAE,MAFX;AAGE,UAAA,SAAS,EAAEd,WAAW,CAACe,MAHzB;AAIE,UAAA,OAAO,EAAE,MAAM,CAAE;AAJnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAgBE,QAAC,QAAD;AAAA,+BACE,QAAC,cAAD;AACE,UAAA,IAAI,EAAEhB,cAAc,CAACiB,GADvB;AAEE,UAAA,SAAS,EAAEhB,WAAW,CAACiB,MAFzB;AAGE,UAAA,OAAO,EAAE,MAHX;AAIE,UAAA,OAAO,EAAE,MAAM,CAAE;AAJnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAzCD;;GAAMV,O;;KAAAA,O;AA2CN,eAAed,OAAO,CAACQ,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CE,OAA7C,CAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { updateQuotes } from \"../data/actions\";\n\nimport { fetchQuotes } from \"../data/apiMediator\";\n\nimport { ListItem, WalletOverview } from \"../components\";\n\nimport { CURRENCY_TYPES, QUOTE_PAIRS } from \"../data/enums\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return { quotes: state.quotes };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ updateQuotes }, dispatch);\n};\n\nconst Wallets = (props) => {\n  const { updateQuotes, quotes } = props;\n\n  useEffect(() => {\n    const getQuotes = setInterval(async () => {\n      const quotes = await fetchQuotes();\n      updateQuotes(quotes);\n    }, 1000);\n    return () => clearInterval(getQuotes);\n  }, []);\n\n  return (\n    <div>\n      <Balance>{($8, 844.42)}</Balance>\n      <ul>\n        <ListItem>\n          <WalletOverview\n            type={CURRENCY_TYPES.CAD}\n            balance={1856.34}\n            onClick={() => {}}\n          />\n        </ListItem>\n        <ListItem>\n          <WalletOverview\n            type={CURRENCY_TYPES.BTC}\n            balance={0.4946}\n            quotePair={QUOTE_PAIRS.BTCCAD}\n            onClick={() => {}}\n          />\n        </ListItem>\n        <ListItem>\n          <WalletOverview\n            type={CURRENCY_TYPES.ETH}\n            quotePair={QUOTE_PAIRS.ETHCAD}\n            balance={2.9429}\n            onClick={() => {}}\n          />\n        </ListItem>\n      </ul>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallets);\n"]},"metadata":{},"sourceType":"module"}