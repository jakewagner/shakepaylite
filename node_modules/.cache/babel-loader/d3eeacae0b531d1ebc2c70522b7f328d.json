{"ast":null,"code":"var _jsxFileName = \"/Users/jwagner/Documents/shakepaylite/src/scenes/Transactions.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { setActivePage, updateTransactions } from \"../data/actions\";\nimport { fetchTransactions } from \"../data/apiMediator\";\nimport { ListItem, Transaction } from \"../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = (state, ownProps) => {\n  const {\n    quotes,\n    activeCurrency,\n    transactions\n  } = state;\n  return {\n    quotes,\n    activeCurrency,\n    transactions\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    updateTransactions,\n    setActivePage\n  }, dispatch);\n};\n\nconst Transactions = props => {\n  _s();\n\n  const {\n    updateTransactions,\n    transactions,\n    activeCurrency\n  } = props;\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetchTransactions();\n      updateTransactions(data);\n    };\n\n    fetchData();\n  }, []);\n\n  if (transactions.length > 0) {\n    return transactions.map(transaction => {\n      if (transaction.currency === activeCurrency) {\n        console.log(transaction);\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(Transaction, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this);\n      }\n\n      return null;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Transactions, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Transactions;\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["/Users/jwagner/Documents/shakepaylite/src/scenes/Transactions.jsx"],"names":["useEffect","connect","bindActionCreators","setActivePage","updateTransactions","fetchTransactions","ListItem","Transaction","mapStateToProps","state","ownProps","quotes","activeCurrency","transactions","mapDispatchToProps","dispatch","Transactions","props","fetchData","data","length","map","transaction","currency","console","log"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,iBAAlD;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,eAAtC;;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,cAAV;AAA0BC,IAAAA;AAA1B,MAA2CJ,KAAjD;AAEA,SAAO;AAAEE,IAAAA,MAAF;AAAUC,IAAAA,cAAV;AAA0BC,IAAAA;AAA1B,GAAP;AACD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAOb,kBAAkB,CAAC;AAAEE,IAAAA,kBAAF;AAAsBD,IAAAA;AAAtB,GAAD,EAAwCY,QAAxC,CAAzB;AACD,CAFD;;AAIA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AAAEb,IAAAA,kBAAF;AAAsBS,IAAAA,YAAtB;AAAoCD,IAAAA;AAApC,MAAuDK,KAA7D;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,SAAS,GAAG,YAAY;AAC5B,YAAMC,IAAI,GAAG,MAAMd,iBAAiB,EAApC;AACAD,MAAAA,kBAAkB,CAACe,IAAD,CAAlB;AACD,KAHD;;AAIAD,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;;AAQA,MAAIL,YAAY,CAACO,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,WAAOP,YAAY,CAACQ,GAAb,CAAkBC,WAAD,IAAiB;AACvC,UAAIA,WAAW,CAACC,QAAZ,KAAyBX,cAA7B,EAA6C;AAC3CY,QAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,4BACE,QAAC,QAAD;AAAA,iCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;;AACD,aAAO,IAAP;AACD,KAVM,CAAP;AAWD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzBD;;GAAMN,Y;;KAAAA,Y;AA2BN,eAAef,OAAO,CAACO,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CE,YAA7C,CAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { setActivePage, updateTransactions } from \"../data/actions\";\nimport { fetchTransactions } from \"../data/apiMediator\";\n\nimport { ListItem, Transaction } from \"../components\";\n\nconst mapStateToProps = (state, ownProps) => {\n  const { quotes, activeCurrency, transactions } = state;\n\n  return { quotes, activeCurrency, transactions };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ updateTransactions, setActivePage }, dispatch);\n};\n\nconst Transactions = (props) => {\n  const { updateTransactions, transactions, activeCurrency } = props;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetchTransactions();\n      updateTransactions(data);\n    };\n    fetchData();\n  }, []);\n\n  if (transactions.length > 0) {\n    return transactions.map((transaction) => {\n      if (transaction.currency === activeCurrency) {\n        console.log(transaction);\n        return (\n          <ListItem>\n            <Transaction />\n          </ListItem>\n        );\n      }\n      return null;\n    });\n  }\n  return <p>loading...</p>;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);\n"]},"metadata":{},"sourceType":"module"}